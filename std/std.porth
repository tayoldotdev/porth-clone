
// Standard streams
macro stdin  0 end
macro stdout 1 end
macro stderr 2 end

// Syscalls
macro SYS_read         0   end 
macro SYS_write        1   end 
macro SYS_open         2   end 
macro SYS_close        3   end 
macro SYS_exit         60  end
macro SYS_openat       257 end
macro SYS_kcpm         312 end
macro SYS_finit_module 313 end

macro AT_FDCWD -100 end
macro O_RDONLY 0 end

macro write  SYS_write  syscall3 end
macro read   SYS_read   syscall3 end
macro openat SYS_openat syscall3 end
macro close  SYS_close  syscall1 end
macro exit   SYS_exit   syscall1 drop end

macro / divmod drop end
macro % divmod swap drop end
macro mod % end
macro div / end

macro nth_argv
    8 * argv + ,64 cast(ptr)
end

// increments value a the pointer
macro inc64
    dup ,64 1 + .64
end

// helpers

macro 2drop 
    drop drop
end

macro 2dup
    over over
end

macro todo
    "TODO: not implemented" stderr write
    1 exit
end

// Calcualte the length of the string and push it on to the stack
// the first element on the stack contains the length pf the string literal
// the second element on the stack contains the full length including \0
// NOTE: it counts event the new line \n
macro strlen
    dup
    while dup , 0 != do 1 + end
    swap -
end

macro puts
    stdout write drop
end
